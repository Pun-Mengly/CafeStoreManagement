// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeStoreManagement.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221031020758_init3")]
    partial class init3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CafeStoreManagement.Models.CategoryModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b3a6e40-5392-46dd-bfee-c03bb8618076"),
                            Code = "SMT",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 810, DateTimeKind.Local).AddTicks(8430),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            MenuGroupId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Smoothie"
                        },
                        new
                        {
                            Id = new Guid("847f2ac7-56e1-4fcb-be9d-d8bc3ef5ed21"),
                            Code = "MIT",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 810, DateTimeKind.Local).AddTicks(8444),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            MenuGroupId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Milk Tea"
                        },
                        new
                        {
                            Id = new Guid("51b79009-adbb-470e-a76b-e152e31db02d"),
                            Code = "CAF",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 810, DateTimeKind.Local).AddTicks(8446),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            MenuGroupId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Coffee"
                        });
                });

            modelBuilder.Entity("CafeStoreManagement.Models.ChannelModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abv")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblChannel", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1385cae1-efeb-46dc-a9e5-38c378297cce"),
                            Abv = "DIN",
                            Code = "DIN",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 811, DateTimeKind.Local).AddTicks(5811),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "Dine In"
                        },
                        new
                        {
                            Id = new Guid("20451b43-686f-4824-8fef-e45e8aef005a"),
                            Abv = "TAK",
                            Code = "TAK",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 811, DateTimeKind.Local).AddTicks(5818),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "Take Away"
                        },
                        new
                        {
                            Id = new Guid("55b5e379-162d-4d52-a622-77f74bbef110"),
                            Abv = "DEL",
                            Code = "DEL",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 811, DateTimeKind.Local).AddTicks(5820),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "Delivery"
                        });
                });

            modelBuilder.Entity("CafeStoreManagement.Models.ItemModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblItem", (string)null);
                });

            modelBuilder.Entity("CafeStoreManagement.Models.SizeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblSize", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("148b0b36-93ea-4ef9-a397-c1dabaeec71e"),
                            Code = "S",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 812, DateTimeKind.Local).AddTicks(9936),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "Small"
                        },
                        new
                        {
                            Id = new Guid("cd26c095-9058-4a09-9a19-08d3ee021f60"),
                            Code = "M",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 812, DateTimeKind.Local).AddTicks(9943),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("7609b709-3da6-4476-9868-8f145a398ce6"),
                            Code = "L",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 812, DateTimeKind.Local).AddTicks(9953),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "Large"
                        });
                });

            modelBuilder.Entity("CafeStoreManagement.Models.SourceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abv")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblSource", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("437d1652-03c5-4b52-91dc-50bf81fb8d06"),
                            Abv = "MBL",
                            Code = "MBL",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 813, DateTimeKind.Local).AddTicks(7534),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "Mobile App"
                        },
                        new
                        {
                            Id = new Guid("7f47571f-8974-4620-85ab-d4a35e397897"),
                            Abv = "FAT",
                            Code = "FAT",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 813, DateTimeKind.Local).AddTicks(7541),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "Food Aggregator"
                        },
                        new
                        {
                            Id = new Guid("f046310e-ee45-416a-bec0-a0cdcb9307cd"),
                            Abv = "WAL",
                            Code = "WAL",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 813, DateTimeKind.Local).AddTicks(7543),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "Walk In"
                        });
                });

            modelBuilder.Entity("CafeStoreManagement.Models.TaxModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("tblTax", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2fdc304d-9995-43a0-8662-0ec3f79be58b"),
                            Code = "PLT",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 814, DateTimeKind.Local).AddTicks(4476),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "PLT",
                            Percentage = 10.0
                        },
                        new
                        {
                            Id = new Guid("b8757f2a-85d7-4ac3-876e-a18387a17ec4"),
                            Code = "VAT",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 814, DateTimeKind.Local).AddTicks(4481),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "VAT",
                            Percentage = 10.0
                        });
                });

            modelBuilder.Entity("MenuGroupModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abv")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblMenuGroup", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c6abf17-a529-4931-b86f-a2c930965584"),
                            Abv = "DRK",
                            Code = "DRK",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 815, DateTimeKind.Local).AddTicks(2007),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "Drink"
                        },
                        new
                        {
                            Id = new Guid("d2d64ba4-d3ac-4922-9027-0a965c2576a8"),
                            Abv = "FOD",
                            Code = "FOD",
                            CreatedBy = "Default user",
                            CreatedDate = new DateTime(2022, 10, 31, 9, 7, 57, 815, DateTimeKind.Local).AddTicks(2014),
                            Description = "Generarted by System",
                            IsDeleted = false,
                            Name = "Food"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
